{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Janka\\\\Desktop\\\\React\\\\React Quiz\\\\src\\\\components\\\\FinishedScreen.js\",\n  _s = $RefreshSig$();\nimport { useQuiz } from \"../contexts/QuizContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinishedScreen() {\n  _s();\n  const {\n    points,\n    maxPossiblePoints,\n    highscore,\n    dispatch\n  } = useQuiz(); // –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n\n  const percentage = points / maxPossiblePoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = \"ü•á\";else if (percentage >= 80) emoji = \"üéâ\";else if (percentage >= 50) emoji = \"üòä\";else if (percentage >= 0) emoji = \"ü§®\";else emoji = \"ü§¶‚Äç‚ôÇÔ∏è\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \"You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this), \" out of \", maxPossiblePoints, \" (\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore: \", highscore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: () => dispatch({\n        type: \"restart\"\n      }),\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FinishedScreen, \"vyINyEjax1K5s5iqUuQTza1Obgs=\", false, function () {\n  return [useQuiz];\n});\n_c = FinishedScreen;\nexport default FinishedScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishedScreen\");","map":{"version":3,"names":["useQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","FinishedScreen","_s","points","maxPossiblePoints","highscore","dispatch","percentage","emoji","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/Janka/Desktop/React/React Quiz/src/components/FinishedScreen.js"],"sourcesContent":["import { useQuiz } from \"../contexts/QuizContext\";\n\nfunction FinishedScreen() {\n  const { points, maxPossiblePoints, highscore, dispatch } = useQuiz(); // –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n\n  const percentage = (points / maxPossiblePoints) * 100;\n\n  let emoji;\n  if (percentage === 100) emoji = \"ü•á\";\n  else if (percentage >= 80) emoji = \"üéâ\";\n  else if (percentage >= 50) emoji = \"üòä\";\n  else if (percentage >= 0) emoji = \"ü§®\";\n  else emoji = \"ü§¶‚Äç‚ôÇÔ∏è\";\n\n  return (\n    <>\n      <p className=\"result\">\n        <span>{emoji}</span>\n        You scored <strong>{points}</strong> out of {maxPossiblePoints} (\n        {Math.ceil(percentage)}%)\n      </p>\n      <p className=\"highscore\">(Highscore: {highscore} points)</p>\n      <button\n        className=\"btn btn-ui\"\n        onClick={() => dispatch({ type: \"restart\" })}\n      >\n        Restart Quiz\n      </button>\n    </>\n  );\n}\n\nexport default FinishedScreen;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC,MAAM;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGV,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEtE,MAAMW,UAAU,GAAIJ,MAAM,GAAGC,iBAAiB,GAAI,GAAG;EAErD,IAAII,KAAK;EACT,IAAID,UAAU,KAAK,GAAG,EAAEC,KAAK,GAAG,IAAI,CAAC,KAChC,IAAID,UAAU,IAAI,EAAE,EAAEC,KAAK,GAAG,IAAI,CAAC,KACnC,IAAID,UAAU,IAAI,EAAE,EAAEC,KAAK,GAAG,IAAI,CAAC,KACnC,IAAID,UAAU,IAAI,CAAC,EAAEC,KAAK,GAAG,IAAI,CAAC,KAClCA,KAAK,GAAG,OAAO;EAEpB,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAGY,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBX,OAAA;QAAAW,QAAA,EAAOD;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACT,eAAAhB,OAAA;QAAAW,QAAA,EAASN;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,YAAQ,EAACV,iBAAiB,EAAC,IAC/D,EAACW,IAAI,CAACC,IAAI,CAACT,UAAU,CAAC,EAAC,IACzB;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJhB,OAAA;MAAGY,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,cAAY,EAACJ,SAAS,EAAC,UAAQ;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5DhB,OAAA;MACEY,SAAS,EAAC,YAAY;MACtBO,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC;QAAEY,IAAI,EAAE;MAAU,CAAC,CAAE;MAAAT,QAAA,EAC9C;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACZ,EAAA,CA5BQD,cAAc;EAAA,QACsCL,OAAO;AAAA;AAAAuB,EAAA,GAD3DlB,cAAc;AA8BvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}